# Lucas Boaventura 180114093

.data
	string: .space 300
	EOL: .asciiz "\n"
	igual_1: .asciiz "="
	igual_2: .asciiz "=="
	Base: .asciiz "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"

.text

main:
	la $a0, string 
	la $a1, 300
	li $v0, 8	 #Lendo a string
	syscall

	la $a1, string

	add $t1, $zero, $zero #	Index da posiçao
	add $t7, $zero, $zero # Contador de posição

loop:
	add $t2, $a1, $t1 # $t2 é a posição atual
	lbu $t3, ($t2) # $t3 é o char atual
	beq $t3, 10, EXIT # Se o char atual for 10 significa que chegamos ao final da string

	beq $t7, 1, segunda
	beq $t7, 2, terceira

#--------------------------------------------------------------#
# Rotina quando é a primeira letra do ciclo
	srl $t4, $t3, 2 # Pega o 6 primeiros dígitos da primeira palavra
	
	#Adicionando aos contadores
	addi $t1, $t1, 1
	addi $t7, $t7, 1

	jal print

	and $t4, $t3, 3 # Pega o 2 ultimos digitos da primeira palavra para utilizar na proxima
	sll $t4, $t4, 4 # Move os 2 ultimos digitos para as primeiras posições
	
	j loop

#--------------------------------------------------------------#
segunda: # Rotina quando é a primeira letra do ciclo
	srl $t5, $t3, 4 # Pega os 4 primeiros do character atual
	add $t4, $t4, $t5 #Soma o excedente do anterior com o atual

	#Adicionando aos contadores
	addi $t1, $t1, 1
	addi $t7, $t7, 1

	jal print #Printando o valor em t4

	and $t4, $t3, 15 # Pega 4 primeiros digitos para serem usado na proxima
	sll $t4, $t4, 2	 # Move eles para as 4 primeiras posições

	j loop
#--------------------------------------------------------------#
terceira: # Rotina de print da terceira palavra

	srl $t5, $t3, 6
	add $t4, $t4, $t5 

	# Por ser o ultimo do ciclo não há a necessidade do and que havia nos outros
	jal print

	and $t4, $t3, 63
	jal print

	# Resetando um contador e somando a posicao 
	addi $t1, $t1, 1
	add $t7, $zero, $zero

	j loop

#--------------------------------------------------------------#

print:
	
	la $a2, Base		# Le a string Base
	addu $a2,$a2,$t4    # Move o 'ponteiro' mais $t4 casas
	lbu $a0,($a2)       # Carrega o sinal em a0
	li $v0, 11			# Realiza a rotina para printar o valor na posicção $t4
	syscall
	jr $ra

EXIT:
	# Checa se é necessário completar os '0' no final
	beq $t7, $zero, RETURN
	beq $t7, 1,	terminoNaPrimeira
	beq $t7, 2, terminoNaSegunda


terminoNaPrimeira:
	jal print # Printa o excedente

	la   $a0, igual_2   	# Carrega dois iguais e printa eles
	li   $v0, 4           	
	syscall

	j RETURN

terminoNaSegunda:
	jal print # Printa o excedente

	la   $a0, igual_1   	# Carrega um igual e printa ele
	li   $v0, 4           	
	syscall

RETURN:
	#Quebra de
	li $v0, 4
	la $a0, EOL
	syscall

	#Return 0
	li $v0, 10
	syscall
