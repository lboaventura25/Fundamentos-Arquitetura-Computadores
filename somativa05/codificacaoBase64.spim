# Lucas Boaventura - 180114093


.data
	string: .space 300
	quebra: .asciiz "\n"
	igual: .asciiz "="
	doisIgual: .asciiz "=="
	padrao: .asciiz "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"

.text

main:
	la $a0, string 					# Leitura da string
	la $a1, 300
	li $v0, 8
	syscall

	la $a1, string

	add $t1, $zero, $zero 				# i do for 
	add $t7, $zero, $zero 				# cont da posição

loop:
	add $t2, $a1, $t1 				# $t2 é a posição atual
	lbu $t3, ($t2) 					# $t3 é o char atual
	beq $t3, 10, SAI 				# Se o char atual for 10 significa que chegamos ao final da string

	beq $t7, 1, segunda
	beq $t7, 2, terceira

	srl $t4, $t3, 2 				# Pega o 6 bits da primeira letra
	
	addi $t7, $t7, 1
	addi $t1, $t1, 1				# Adiciona 1 no i e no cont

	jal printa					# Printa

	and $t4, $t3, 3 				# Pega os 2 ultimos bits da primeira letra para utilizar na proxima
	sll $t4, $t4, 4 				# Move os 2 ultimos bits
	
	j loop

segunda:
	srl $t5, $t3, 4 				# Pega os 4 primeiros bits da segunda letra em diante
	add $t4, $t4, $t5 				# Concatena com as duas da ultima letra

	addi $t7, $t7, 1
	addi $t1, $t1, 1				# Adiciona 1 no i e no cont

	jal printa 					# Printa

	and $t4, $t3, 15 				# Pega os 4 primeiros bits da letra
	sll $t4, $t4, 2	 				# Move eles para as 4 bits

	j loop

terceira:

	srl $t5, $t3, 6
	add $t4, $t4, $t5 

	jal printa

	and $t4, $t3, 63
	jal printa

	add $t7, $zero, $zero
	addi $t1, $t1, 1

	j loop


printa:
	
	la $a2, padrao
	addu $a2,$a2,$t4   
	lbu $a0,($a2)
	li $v0, 11				# Realiza o printa do valor na posicção $t4
	syscall
	jr $ra

SAI:			
	beq $t7, $zero, FINALIZA
	beq $t7, 1,	finalNaPrimeira
	beq $t7, 2, finalDaSegunda


finalNaPrimeira:
	jal printa 				# Printa o que sobrou

	la   $a0, doisIgual   			# Carrega '==' e printa
	li   $v0, 4           	
	syscall

	j FINALIZA

finalDaSegunda:
	jal printa 				# Printa o que sobrou

	la   $a0, igual   			# Carrega '=' e printa
	li   $v0, 4           	
	syscall

FINALIZA:
	li $v0, 4				# Printa quebra de linha
	la $a0, quebra
	syscall

	li $v0, 10
	syscall
